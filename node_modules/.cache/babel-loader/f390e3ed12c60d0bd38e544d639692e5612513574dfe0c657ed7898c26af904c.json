{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport movieApi from \"../api/psetsApi\";\nexport const fetchAsyncPsets = createAsyncThunk(\"api/fetchAsyncPsets\", async () => {\n  const response = await movieApi.get(`psets`);\n  return response.data;\n});\n\n// export const fetchAsyncShows = createAsyncThunk(\n//   \"movies/fetchAsyncShows\",\n//   async () => {\n//     const seriesText = \"Friends\";\n//     const response = await movieApi.get(\n//       `?apiKey=${APIKey}&s=${seriesText}&type=series`\n//     );\n//     return response.data;\n//   }\n// );\n\nconst initialState = {\n  api: {}\n};\nconst apiSlice = createSlice({\n  name: \"api\",\n  initialState,\n  reducers: {\n    addapi: (state, {\n      payload\n    }) => {\n      state.api = payload;\n    }\n  },\n  extraReducers: {\n    [fetchAsyncPsets.pending]: () => {\n      console.log(\"Pending\");\n    },\n    [fetchAsyncPsets.fulfilled]: (state, {\n      payload\n    }) => {\n      console.log(\"Fetched Successfully!\");\n      return {\n        ...state,\n        movies: payload\n      };\n    },\n    [fetchAsyncPsets.rejected]: () => {\n      console.log(\"Rejected!\");\n    }\n  }\n});\nexport const getAllRecords = state => state.api;\nexport default apiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","movieApi","fetchAsyncPsets","response","get","data","initialState","api","apiSlice","name","reducers","addapi","state","payload","extraReducers","pending","console","log","fulfilled","movies","rejected","getAllRecords","reducer"],"sources":["/Users/nabinbagale/Desktop/Working/Lab/web-app/client/src/features/recordSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport movieApi from \"../api/psetsApi\";\n\nexport const fetchAsyncPsets = createAsyncThunk(\n  \"api/fetchAsyncPsets\",\n  async () => {\n    const response = await movieApi.get(`psets`);\n    return response.data;\n  }\n);\n\n// export const fetchAsyncShows = createAsyncThunk(\n//   \"movies/fetchAsyncShows\",\n//   async () => {\n//     const seriesText = \"Friends\";\n//     const response = await movieApi.get(\n//       `?apiKey=${APIKey}&s=${seriesText}&type=series`\n//     );\n//     return response.data;\n//   }\n// );\n\nconst initialState = {\n  api: {},\n};\n\nconst apiSlice = createSlice({\n  name: \"api\",\n  initialState,\n  reducers: {\n    addapi: (state, { payload }) => {\n      state.api = payload;\n    },\n  },\n  extraReducers: {\n    [fetchAsyncPsets.pending]: () => {\n      console.log(\"Pending\");\n    },\n    [fetchAsyncPsets.fulfilled]: (state, { payload }) => {\n      console.log(\"Fetched Successfully!\");\n      return { ...state, movies: payload };\n    },\n    [fetchAsyncPsets.rejected]: () => {\n      console.log(\"Rejected!\");\n    },\n  },\n});\n\nexport const getAllRecords = (state) => state.api;\nexport default apiSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,QAAQ,MAAM,iBAAiB;AAEtC,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAC7C,qBAAqB,EACrB,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAE,OAAM,CAAC;EAC5C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;EACnBC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,MAAMC,QAAQ,GAAGT,WAAW,CAAC;EAC3BU,IAAI,EAAE,KAAK;EACXH,YAAY;EACZI,QAAQ,EAAE;IACRC,MAAM,EAAEA,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MAC9BD,KAAK,CAACL,GAAG,GAAGM,OAAO;IACrB;EACF,CAAC;EACDC,aAAa,EAAE;IACb,CAACZ,eAAe,CAACa,OAAO,GAAG,MAAM;MAC/BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC;IACD,CAACf,eAAe,CAACgB,SAAS,GAAG,CAACN,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACnDG,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,OAAO;QAAE,GAAGL,KAAK;QAAEO,MAAM,EAAEN;MAAQ,CAAC;IACtC,CAAC;IACD,CAACX,eAAe,CAACkB,QAAQ,GAAG,MAAM;MAChCJ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMI,aAAa,GAAIT,KAAK,IAAKA,KAAK,CAACL,GAAG;AACjD,eAAeC,QAAQ,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}