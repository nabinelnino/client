{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport recordApi from \"../api/psetsApi\";\nexport const fetchAsyncPsets = createAsyncThunk(\"api/fetchAsyncPsets\", async () => {\n  const response = await recordApi.get(`api/psets`);\n  console.log(\"ALL DATA\", response.data);\n  return response.data;\n});\nconst initialState = {\n  api: []\n};\nconst apiSlice = createSlice({\n  name: \"api\",\n  initialState,\n  reducers: {\n    addapi: (state, {\n      payload\n    }) => {\n      state.api = payload;\n    }\n  },\n  extraReducers: {\n    [fetchAsyncPsets.pending]: () => {\n      console.log(\"Pending\");\n    },\n    [fetchAsyncPsets.fulfilled]: (state, {\n      payload\n    }) => {\n      console.log(\"Fetched Successfully!\", payload);\n      return {\n        ...state,\n        api: payload\n      };\n    },\n    [fetchAsyncPsets.rejected]: () => {\n      console.log(\"Rejected!\");\n    }\n  }\n});\nexport const getAllRecords = state => state.records.api;\nexport default apiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","recordApi","fetchAsyncPsets","response","get","console","log","data","initialState","api","apiSlice","name","reducers","addapi","state","payload","extraReducers","pending","fulfilled","rejected","getAllRecords","records","reducer"],"sources":["/Users/nabinbagale/Desktop/Working/Lab/web-app/client/src/features/recordSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport recordApi from \"../api/psetsApi\";\n\nexport const fetchAsyncPsets = createAsyncThunk(\n  \"api/fetchAsyncPsets\",\n  async () => {\n    const response = await recordApi.get(`api/psets`);\n    console.log(\"ALL DATA\", response.data);\n    return response.data;\n  }\n);\n\nconst initialState = {\n  api: [],\n};\n\nconst apiSlice = createSlice({\n  name: \"api\",\n  initialState,\n  reducers: {\n    addapi: (state, { payload }) => {\n      state.api = payload;\n    },\n  },\n  extraReducers: {\n    [fetchAsyncPsets.pending]: () => {\n      console.log(\"Pending\");\n    },\n    [fetchAsyncPsets.fulfilled]: (state, { payload }) => {\n      console.log(\"Fetched Successfully!\", payload);\n      return { ...state, api: payload };\n    },\n    [fetchAsyncPsets.rejected]: () => {\n      console.log(\"Rejected!\");\n    },\n  },\n});\n\nexport const getAllRecords = (state) => state.records.api;\nexport default apiSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,SAAS,MAAM,iBAAiB;AAEvC,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAC7C,qBAAqB,EACrB,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMF,SAAS,CAACG,GAAG,CAAE,WAAU,CAAC;EACjDC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAACI,IAAI,CAAC;EACtC,OAAOJ,QAAQ,CAACI,IAAI;AACtB,CACF,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,QAAQ,GAAGX,WAAW,CAAC;EAC3BY,IAAI,EAAE,KAAK;EACXH,YAAY;EACZI,QAAQ,EAAE;IACRC,MAAM,EAAEA,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MAC9BD,KAAK,CAACL,GAAG,GAAGM,OAAO;IACrB;EACF,CAAC;EACDC,aAAa,EAAE;IACb,CAACd,eAAe,CAACe,OAAO,GAAG,MAAM;MAC/BZ,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC;IACD,CAACJ,eAAe,CAACgB,SAAS,GAAG,CAACJ,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACnDV,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAES,OAAO,CAAC;MAC7C,OAAO;QAAE,GAAGD,KAAK;QAAEL,GAAG,EAAEM;MAAQ,CAAC;IACnC,CAAC;IACD,CAACb,eAAe,CAACiB,QAAQ,GAAG,MAAM;MAChCd,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMc,aAAa,GAAIN,KAAK,IAAKA,KAAK,CAACO,OAAO,CAACZ,GAAG;AACzD,eAAeC,QAAQ,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}