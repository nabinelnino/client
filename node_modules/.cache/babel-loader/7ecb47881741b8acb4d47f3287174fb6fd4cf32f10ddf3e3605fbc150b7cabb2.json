{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nexport default (function (Base) {\n  return function (_Base) {\n    _inherits(_class, _Base);\n    function _class() {\n      _classCallCheck(this, _class);\n      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n    _createClass(_class, [{\n      key: 'UNSAFE_componentWillMount',\n      value: function UNSAFE_componentWillMount() {\n        this.setStateWithData(this.getDataModel(this.getResolvedState(), true));\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.fireFetchData();\n      }\n    }, {\n      key: 'UNSAFE_componentWillReceiveProps',\n      value: function UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n        var oldState = this.getResolvedState();\n        var newState = this.getResolvedState(nextProps, nextState);\n\n        // Do a deep compare of new and old `defaultOption` and\n        // if they are different reset `option = defaultOption`\n        var defaultableOptions = ['sorted', 'filtered', 'resized', 'expanded'];\n        defaultableOptions.forEach(function (x) {\n          var defaultName = 'default' + (x.charAt(0).toUpperCase() + x.slice(1));\n          if (JSON.stringify(oldState[defaultName]) !== JSON.stringify(newState[defaultName])) {\n            newState[x] = newState[defaultName];\n          }\n        });\n\n        // If they change these table options, we need to reset defaults\n        // or else we could get into a state where the user has changed the UI\n        // and then disabled the ability to change it back.\n        // e.g. If `filterable` has changed, set `filtered = defaultFiltered`\n        var resettableOptions = ['sortable', 'filterable', 'resizable'];\n        resettableOptions.forEach(function (x) {\n          if (oldState[x] !== newState[x]) {\n            var baseName = x.replace('able', '');\n            var optionName = baseName + 'ed';\n            var defaultName = 'default' + (optionName.charAt(0).toUpperCase() + optionName.slice(1));\n            newState[optionName] = newState[defaultName];\n          }\n        });\n\n        // Props that trigger a data update\n        if (oldState.data !== newState.data || oldState.columns !== newState.columns || oldState.pivotBy !== newState.pivotBy || oldState.sorted !== newState.sorted || oldState.filtered !== newState.filtered) {\n          this.setStateWithData(this.getDataModel(newState, oldState.data !== newState.data));\n        }\n      }\n    }, {\n      key: 'setStateWithData',\n      value: function setStateWithData(newState, cb) {\n        var _this2 = this;\n        var oldState = this.getResolvedState();\n        var newResolvedState = this.getResolvedState({}, newState);\n        var freezeWhenExpanded = newResolvedState.freezeWhenExpanded;\n\n        // Default to unfrozen state\n\n        newResolvedState.frozen = false;\n\n        // If freezeWhenExpanded is set, check for frozen conditions\n        if (freezeWhenExpanded) {\n          // if any rows are expanded, freeze the existing data and sorting\n          var keys = Object.keys(newResolvedState.expanded);\n          for (var i = 0; i < keys.length; i += 1) {\n            if (newResolvedState.expanded[keys[i]]) {\n              newResolvedState.frozen = true;\n              break;\n            }\n          }\n        }\n\n        // If the data isn't frozen and either the data or\n        // sorting model has changed, update the data\n        if (oldState.frozen && !newResolvedState.frozen || oldState.sorted !== newResolvedState.sorted || oldState.filtered !== newResolvedState.filtered || oldState.showFilters !== newResolvedState.showFilters || !newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData) {\n          // Handle collapseOnsortedChange & collapseOnDataChange\n          if (oldState.sorted !== newResolvedState.sorted && this.props.collapseOnSortingChange || oldState.filtered !== newResolvedState.filtered || oldState.showFilters !== newResolvedState.showFilters || oldState.sortedData && !newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData && this.props.collapseOnDataChange) {\n            newResolvedState.expanded = {};\n          }\n          Object.assign(newResolvedState, this.getSortedData(newResolvedState));\n        }\n\n        // Set page to 0 if filters change\n        if (oldState.filtered !== newResolvedState.filtered) {\n          newResolvedState.page = 0;\n        }\n\n        // Calculate pageSize all the time\n        if (newResolvedState.sortedData) {\n          newResolvedState.pages = newResolvedState.manual ? newResolvedState.pages : Math.ceil(newResolvedState.sortedData.length / newResolvedState.pageSize);\n          newResolvedState.page = newResolvedState.manual ? newResolvedState.page : Math.max(newResolvedState.page >= newResolvedState.pages ? newResolvedState.pages - 1 : newResolvedState.page, 0);\n        }\n        return this.setState(newResolvedState, function () {\n          if (cb) {\n            cb();\n          }\n          if (oldState.page !== newResolvedState.page || oldState.pageSize !== newResolvedState.pageSize || oldState.sorted !== newResolvedState.sorted || oldState.filtered !== newResolvedState.filtered) {\n            _this2.fireFetchData();\n          }\n        });\n      }\n    }]);\n    return _class;\n  }(Base);\n});","map":{"version":3,"names":["Base","_Base","_inherits","_class","_classCallCheck","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","apply","arguments","_createClass","key","value","UNSAFE_componentWillMount","setStateWithData","getDataModel","getResolvedState","componentDidMount","fireFetchData","UNSAFE_componentWillReceiveProps","nextProps","nextState","oldState","newState","defaultableOptions","forEach","x","defaultName","charAt","toUpperCase","slice","JSON","stringify","resettableOptions","baseName","replace","optionName","data","columns","pivotBy","sorted","filtered","cb","_this2","newResolvedState","freezeWhenExpanded","frozen","keys","expanded","i","length","showFilters","resolvedData","props","collapseOnSortingChange","sortedData","collapseOnDataChange","assign","getSortedData","page","pages","manual","Math","ceil","pageSize","max","setState"],"sources":["/Users/nabinbagale/Desktop/untitled folder/lab-repo/client/node_modules/react-table-6/src/lifecycle.js"],"sourcesContent":["export default Base =>\n  class extends Base {\n    UNSAFE_componentWillMount () {\n      this.setStateWithData(this.getDataModel(this.getResolvedState(), true))\n    }\n\n    componentDidMount () {\n      this.fireFetchData()\n    }\n\n    UNSAFE_componentWillReceiveProps (nextProps, nextState) {\n      const oldState = this.getResolvedState()\n      const newState = this.getResolvedState(nextProps, nextState)\n\n      // Do a deep compare of new and old `defaultOption` and\n      // if they are different reset `option = defaultOption`\n      const defaultableOptions = ['sorted', 'filtered', 'resized', 'expanded']\n      defaultableOptions.forEach(x => {\n        const defaultName = `default${x.charAt(0).toUpperCase() + x.slice(1)}`\n        if (JSON.stringify(oldState[defaultName]) !== JSON.stringify(newState[defaultName])) {\n          newState[x] = newState[defaultName]\n        }\n      })\n\n      // If they change these table options, we need to reset defaults\n      // or else we could get into a state where the user has changed the UI\n      // and then disabled the ability to change it back.\n      // e.g. If `filterable` has changed, set `filtered = defaultFiltered`\n      const resettableOptions = ['sortable', 'filterable', 'resizable']\n      resettableOptions.forEach(x => {\n        if (oldState[x] !== newState[x]) {\n          const baseName = x.replace('able', '')\n          const optionName = `${baseName}ed`\n          const defaultName = `default${optionName.charAt(0).toUpperCase() + optionName.slice(1)}`\n          newState[optionName] = newState[defaultName]\n        }\n      })\n\n      // Props that trigger a data update\n      if (\n        oldState.data !== newState.data ||\n        oldState.columns !== newState.columns ||\n        oldState.pivotBy !== newState.pivotBy ||\n        oldState.sorted !== newState.sorted ||\n        oldState.filtered !== newState.filtered\n      ) {\n        this.setStateWithData(this.getDataModel(newState, oldState.data !== newState.data))\n      }\n    }\n\n    setStateWithData (newState, cb) {\n      const oldState = this.getResolvedState()\n      const newResolvedState = this.getResolvedState({}, newState)\n      const { freezeWhenExpanded } = newResolvedState\n\n      // Default to unfrozen state\n      newResolvedState.frozen = false\n\n      // If freezeWhenExpanded is set, check for frozen conditions\n      if (freezeWhenExpanded) {\n        // if any rows are expanded, freeze the existing data and sorting\n        const keys = Object.keys(newResolvedState.expanded)\n        for (let i = 0; i < keys.length; i += 1) {\n          if (newResolvedState.expanded[keys[i]]) {\n            newResolvedState.frozen = true\n            break\n          }\n        }\n      }\n\n      // If the data isn't frozen and either the data or\n      // sorting model has changed, update the data\n      if (\n        (oldState.frozen && !newResolvedState.frozen) ||\n        oldState.sorted !== newResolvedState.sorted ||\n        oldState.filtered !== newResolvedState.filtered ||\n        oldState.showFilters !== newResolvedState.showFilters ||\n        (!newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData)\n      ) {\n        // Handle collapseOnsortedChange & collapseOnDataChange\n        if (\n          (oldState.sorted !== newResolvedState.sorted && this.props.collapseOnSortingChange) ||\n          oldState.filtered !== newResolvedState.filtered ||\n          oldState.showFilters !== newResolvedState.showFilters ||\n          (oldState.sortedData &&\n            !newResolvedState.frozen &&\n            oldState.resolvedData !== newResolvedState.resolvedData &&\n            this.props.collapseOnDataChange)\n        ) {\n          newResolvedState.expanded = {}\n        }\n\n        Object.assign(newResolvedState, this.getSortedData(newResolvedState))\n      }\n\n      // Set page to 0 if filters change\n      if (oldState.filtered !== newResolvedState.filtered) {\n        newResolvedState.page = 0\n      }\n\n      // Calculate pageSize all the time\n      if (newResolvedState.sortedData) {\n        newResolvedState.pages = newResolvedState.manual\n          ? newResolvedState.pages\n          : Math.ceil(newResolvedState.sortedData.length / newResolvedState.pageSize)\n        newResolvedState.page = newResolvedState.manual ? newResolvedState.page : Math.max(\n          newResolvedState.page >= newResolvedState.pages\n            ? newResolvedState.pages - 1\n            : newResolvedState.page,\n          0\n        )\n      }\n\n      return this.setState(newResolvedState, () => {\n        if (cb) {\n          cb()\n        }\n        if (\n          oldState.page !== newResolvedState.page ||\n          oldState.pageSize !== newResolvedState.pageSize ||\n          oldState.sorted !== newResolvedState.sorted ||\n          oldState.filtered !== newResolvedState.filtered\n        ) {\n          this.fireFetchData()\n        }\n      })\n    }\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}